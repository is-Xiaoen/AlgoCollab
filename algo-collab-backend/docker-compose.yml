version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: algocollab-postgres
    environment:
      POSTGRES_USER: algocollab_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dev_password}
      POSTGRES_DB: algocollab
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=zh_CN.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - algocollab-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U algocollab_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: algocollab-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - algocollab-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ 消息队列（可选）
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: algocollab-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-admin}
    ports:
      - "5672:5672"
      - "15672:15672"  # 管理界面
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - algocollab-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO 对象存储（用于文件存储）
  minio:
    image: minio/minio:latest
    container_name: algocollab-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD:-admin123}
    ports:
      - "9000:9000"
      - "9001:9001"  # 控制台
    volumes:
      - minio_data:/data
    networks:
      - algocollab-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # 应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: algocollab-app
    env_file:
      - .env
    ports:
      - "8080:8080"
      - "9090:9090"  # Metrics port
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - algocollab-network
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    restart: unless-stopped

  # Nginx 反向代理（生产环境）
  nginx:
    image: nginx:alpine
    container_name: algocollab-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployments/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployments/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - algocollab-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  minio_data:

networks:
  algocollab-network:
    driver: bridge